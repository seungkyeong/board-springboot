<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="dao.BoardDAO">
<select id="getAllCountBoardList" parameterType="dto.SearchDTO">
    	SELECT Count(DISTINCT T1.system_no) as boardListCount	
        FROM board AS T1 
        <if test="type != null and type == 'myLikeList'">
        	INNER JOIN t_board_like AS T2
				ON T1.system_no = T2.board_system_no
			INNER JOIN (
				SELECT board_system_no, MAX(create_date) AS latest_create_date
				FROM t_board_like
				WHERE user_system_no = #{userSysNo}
				GROUP BY board_system_no
			) AS T3
        		ON T2.board_system_no = T3.board_system_no
				AND T2.create_date = T3.latest_create_date
        </if>
        WHERE 1=1
        <if test="searchList.title != null and searchList.title != ''">
        	AND T1.title LIKE CONCAT('%', #{searchList.title}, '%')
        </if>
        <if test="searchList.content != null and searchList.content != ''">
        	AND T1.content LIKE CONCAT('%', #{searchList.content}, '%')
        </if>
        <if test="searchList.userId != null and searchList.userId != ''">
        	AND T1.id LIKE CONCAT('%', #{searchList.userId}, '%')
        </if>
        <if test="searchList.createDate != null and searchList.createDate != ''">
        	<![CDATA[
        		AND T1.create_date >= #{searchList.createDate}
        		AND T1.create_date <= DATE_ADD(#{searchList.createDate}, INTERVAL 1 DAY)
        	]]>
    	</if>
    	<if test="searchList.modifyDate != null and searchList.modifyDate != ''">
    		<![CDATA[
        		AND T1.modify_date >= #{searchList.modifyDate}
        		AND T1.modify_date < DATE_ADD(#{searchList.modifyDate}, INTERVAL 1 DAY)
        	]]>
    	</if>
    	<if test="type != null and type == 'myBoardList'">
        	AND T1.user_system_no = #{userSysNo}
        </if>
        <if test="type != null and type == 'myLikeList'">
        	AND T2.user_system_no = #{userSysNo}
       		AND T2.action = 'Increase'
        </if>
        </select>


    <select id="getAllBoardList" resultType="dto.BoardDTO" parameterType="dto.SearchDTO">
    	SELECT 
       		DISTINCT T1.system_no as sysNo, 
       		T1.title, T1.content, 
       		T1.id as userId, 
       		T1.user_system_no as userSysNo,
        	T1.modify_date as modifyDate, 
       		T1.view,
       		T1.like_count as likeCount,
        	T1.img_path as strImgPath,
        	<if test="type != null and type == 'myLikeList'">
        		T2.create_date as createDate
        	</if>
        	<if test="type != null and type != 'myLikeList'">
        		T1.create_date as createDate
        	</if>
        FROM board AS T1
        <if test="type != null and type == 'myLikeList'">
        	INNER JOIN t_board_like AS T2
				ON T1.system_no = T2.board_system_no
			INNER JOIN (
				SELECT board_system_no, MAX(create_date) AS latest_create_date
				FROM t_board_like
				WHERE user_system_no = #{userSysNo}
				GROUP BY board_system_no
			) AS T3
        		ON T2.board_system_no = T3.board_system_no
				AND T2.create_date = T3.latest_create_date
        </if>
        WHERE 1=1
        <if test="searchList.title != null and searchList.title != ''">
        	AND T1.title LIKE CONCAT('%', #{searchList.title}, '%')
        </if>
        <if test="searchList.content != null and searchList.content != ''">
        	AND T1.content LIKE CONCAT('%', #{searchList.content}, '%')
        </if>
        <if test="searchList.userId != null and searchList.userId != ''">
        	AND T1.id LIKE CONCAT('%', #{searchList.userId}, '%')
        </if>
        <if test="searchList.createDate != null and searchList.createDate != ''">
        	<![CDATA[
        		AND T1.create_date >= #{searchList.createDate}
        		AND T1.create_date <= DATE_ADD(#{searchList.createDate}, INTERVAL 1 DAY)
        	]]>
    	</if>
    	<if test="searchList.modifyDate != null and searchList.modifyDate != ''">
    		<![CDATA[
        		AND T1.modify_date >= #{searchList.modifyDate}
        		AND T1.modify_date < DATE_ADD(#{searchList.modifyDate}, INTERVAL 1 DAY)
        	]]>
    	</if>
    	<if test="type != null and type == 'myBoardList'">
        	AND T1.user_system_no = #{userSysNo}
        </if>
        <if test="type != null and type == 'myLikeList'">
        	AND T2.user_system_no = #{userSysNo}
       		AND T2.action = 'Increase'
        </if>
    	<if test="type != null and (type == 'allList' or type == 'myBoardList')">
        	ORDER BY T1.create_date DESC
        </if>
        <if test="type != null and type == 'likeList'">
        	ORDER BY T1.like_count DESC
        </if>
        <if test="type != null and type == 'viewList'">
        	ORDER BY T1.view DESC
        </if>
        <if test="type != null and type == 'myLikeList'">
        	ORDER BY T2.create_date DESC
        </if>
        LIMIT #{pageSize} OFFSET #{pageIndex};
    </select>
    
    <insert id="createBoard" useGeneratedKeys="false">
        INSERT 
        	INTO board (system_no, title, content, id, user_system_no, create_date, modify_date, view, img_path)
        	VALUES (REPLACE(UUID(), '-', ''), #{title}, #{content}, #{userId}, #{userSysNo}, now(), now(), 0, #{strImgPath});
    </insert>
    
    <update id="updateBoard" useGeneratedKeys="false">
    	UPDATE board
    	SET
        	title = #{title},
        	content = #{content},
        	id = #{userId},
        	user_system_no = #{userSysNo},
        	modify_date = now(),  
        	img_path = #{strImgPath}
    	WHERE system_no = #{sysNo}
	</update>
    
    <select id="getBoardDetail" resultType="dto.BoardDTO" parameterType="dto.SearchDTO">
        SELECT 
        	T1.system_no as sysNo,  
        	T1.title, T1.content, 
        	T1.id as userId, 
        	T1.user_system_no as userSysNo,
        	T1.create_date as createDate,
        	T1.modify_date as modifyDate, 
        	T1.view,
        	T1.img_path as strImgPath,
        	CASE 
				WHEN T2.system_no IS NOT NULL THEN T2.action
 					ELSE 'none'
 			END AS likeFlag
        FROM board AS T1
        LEFT OUTER JOIN t_board_like AS T2
        	ON T2.board_system_no = #{searchList.sysNo}
        	AND T2.user_system_no = #{userSysNo}
        WHERE T1.system_no = #{searchList.sysNo}
        ORDER BY T2.create_date DESC
        LIMIT 1;
    </select>
    
    <insert id="createUser" useGeneratedKeys="false">
        INSERT 
        	INTO user (system_no, id, password, name, create_date, modify_date, email, phone)
        	VALUES (REPLACE(UUID(), '-', ''), #{id}, #{password}, #{name}, now(), now(),#{email}, #{phone});
    </insert>
    
    <select id="checkUser" resultType="dto.UserDTO" parameterType="hashMap">
        SELECT 
        	system_no as sysNo,  
        	id as id, 
        	password as password,
        	name as name,
        	email as email,
        	phone as phone,
        	create_date as createDate,
        	modify_date as modifyDate
        FROM user 
        WHERE 1=1
        AND ${key} = #{value};
    </select>
    
    <update id="updateUserDetail" useGeneratedKeys="false">
    	UPDATE user
    	SET
        	name = #{name},
        	modify_date = now(),  
        	phone = #{phone},
        	email = #{email}
    	WHERE system_no = #{sysNo}
	</update>
	
	<update id="updateUserPw" parameterType="hashMap">
    	UPDATE user
    	SET
        	password = #{newPassword}
    	WHERE system_no = #{sysNo}
	</update>
	
	<update id="syncCount" useGeneratedKeys="false">
    	UPDATE board
    	SET
        	${type} = #{count},
        	modify_date = now()
    	WHERE system_no = #{sysNo}
	</update>
	
	<insert id="createComment" useGeneratedKeys="false">
        INSERT 
        	INTO comment (system_no, parent_system_no, board_system_no, comment, id, user_system_no, create_date, modify_date )
        	VALUES (REPLACE(UUID(), '-', ''), #{parSysNo}, #{boardSysNo}, #{comment}, #{userId}, #{userSysNo}, now(), now());
    </insert>
    
    <select id="getComment" resultType="dto.CommentDTO" parameterType="dto.SearchDTO">
        SELECT 
        	system_no as sysNo,  
        	parent_system_no as parSysNo, 
        	board_system_no as boardSysNo, 
        	comment as comment,
        	id as userId, 
       		user_system_no as userSysNo,
        	create_date as createDate,
        	modify_date as modifyDate
        FROM comment 
        WHERE 1=1
        AND board_system_no = #{searchList.sysNo}
        ORDER BY create_date DESC;
    </select>
    
    <insert id="createLikeLog" parameterType="hashMap">
        INSERT 
        	INTO t_board_like (system_no, id, user_system_no, create_date, modify_date, board_system_no, action )
        	VALUES (REPLACE(UUID(), '-', ''), #{userId}, #{userSysNo}, now(), now(), #{sysNo}, #{action});
    </insert>
    
    <delete id="deleteBoardList" parameterType="hashMap">
    	DELETE FROM board
    	WHERE system_no IN 
    	<foreach item="item" collection="deleteList" open="(" close=")" separator=",">
        	#{item}
    	</foreach>
	</delete>
	
	<insert id="saveNotification" parameterType="dto.NotificationDTO">
        INSERT 
        	INTO notification (system_no, id, user_system_no, board_system_no, title, message, read_flag, create_date, modify_date )
        	VALUES (REPLACE(UUID(), '-', ''), #{userId}, #{userSysNo}, #{boardSysNo}, #{title}, #{message}, #{readFlag}, now(), now());
    </insert>
    
    <delete id="deleteLikeList" parameterType="hashMap">
    	DELETE FROM t_board_like
    	WHERE 1=1
    	<if test="type != null and type == 'like'">
    		AND user_system_no = #{userSysNo}
    	</if>
    	AND board_system_no IN 
    	<foreach item="item" collection="deleteList" open="(" close=")" separator=",">
        	#{item}
    	</foreach>
	</delete>
	
	<delete id="deleteCommentList" parameterType="hashMap">
    	DELETE FROM comment
    	WHERE board_system_no IN 
    	<foreach item="item" collection="deleteList" open="(" close=")" separator=",">
        	#{item}
    	</foreach>
	</delete>
	
	<select id="getNotiList" resultType="dto.NotificationDTO" parameterType="dto.NotificationDTO">
        SELECT 
        	system_no as sysNo,  
        	id as userId, 
        	user_system_no as userSysNo, 
        	message as message,
        	board_system_no as boardSysNo,
        	title as title,
        	create_date as createDate,
        	modify_date as modifyDate,
        	read_flag as readFlag
        FROM notification 
        WHERE 1=1
        AND user_system_no = #{userSysNo}
        ORDER BY create_date DESC;
     </select>
     
     <update id="updateNotiReadFlag" useGeneratedKeys="false">
        UPDATE notification
        SET read_flag = true,
        	modify_date = now()
        WHERE system_no = #{sysNo}
        AND user_system_no = #{userSysNo}
        AND board_system_no = #{boardSysNo}
     </update>
</mapper>